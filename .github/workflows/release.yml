name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: "22"
  CACHE_DEPENDENCY_PATH: "**/package.json"

jobs:
  test:
    name: Test & Build (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false # Don't cancel other jobs if one fails
      matrix:
        node-version: [18, 20, 22]
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: |
            node_modules
            apps/*/node_modules
            packages/*/node_modules
            ~/.npm
          key: deps-${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles(env.CACHE_DEPENDENCY_PATH) }}
          restore-keys: |
            deps-${{ runner.os }}-node-${{ matrix.node-version }}-
            deps-${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline --no-audit

      - name: Lint
        run: npm run lint

      - name: Test
        timeout-minutes: 15
        run: npm run test
        env:
          NODE_ENV: test

      - name: Build
        run: npm run build

  release:
    name: Release
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
      id-token: write
      packages: write
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache-deps-release
        with:
          path: |
            node_modules
            apps/*/node_modules
            packages/*/node_modules
            ~/.npm
          key: deps-${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles(env.CACHE_DEPENDENCY_PATH) }}
          restore-keys: |
            deps-${{ runner.os }}-node-${{ env.NODE_VERSION }}-
            deps-${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.cache-deps-release.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline --no-audit

      - name: Build all packages
        run: npm run build

      - name: Verify build outputs
        run: |
          echo "Verifying build outputs..."
          ls -la apps/mcp-knowledge-graph/dist/
          ls -la apps/vscode-extension/dist/

      - name: Release MCP Package
        timeout-minutes: 5
        run: |
          cd apps/mcp-knowledge-graph
          npx semantic-release@22.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Package VS Code Extension
        timeout-minutes: 3
        run: |
          cd apps/vscode-extension
          npm run package
          echo "Extension packaged successfully:"
          ls -la *.vsix

      - name: Release VS Code Extension
        timeout-minutes: 5
        run: |
          cd apps/vscode-extension
          npx semantic-release@22.0.12
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Upload release artifacts
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        if: always()
        with:
          name: release-artifacts-${{ github.run_id }}
          path: |
            apps/vscode-extension/*.vsix
            apps/mcp-knowledge-graph/dist/**/*
          retention-days: 30
